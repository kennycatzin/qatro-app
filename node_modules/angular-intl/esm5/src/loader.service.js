/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Inject, Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { CONFIG } from './types/config.token';
var LoaderService = /** @class */ (function () {
    function LoaderService(http, config) {
        this.http = http;
        this.config = config;
        this.path = '/assets/languages/';
        this.extension = '.json';
        this.path = config.path ? config.path : this.path;
    }
    /**
     * @param {?} fileName
     * @return {?}
     */
    LoaderService.prototype.getFile = /**
     * @param {?} fileName
     * @return {?}
     */
    function (fileName) {
        return this.http.get(this.path + fileName + this.extension);
    };
    LoaderService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    LoaderService.ctorParameters = function () { return [
        { type: HttpClient, },
        { type: undefined, decorators: [{ type: Inject, args: [CONFIG,] },] },
    ]; };
    return LoaderService;
}());
export { LoaderService };
function LoaderService_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    LoaderService.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    LoaderService.ctorParameters;
    /** @type {?} */
    LoaderService.prototype.path;
    /** @type {?} */
    LoaderService.prototype.extension;
    /** @type {?} */
    LoaderService.prototype.http;
    /** @type {?} */
    LoaderService.prototype.config;
}
//# sourceMappingURL=loader.service.js.map