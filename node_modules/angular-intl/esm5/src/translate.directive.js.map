{"version":3,"file":"translate.directive.js","sourceRoot":"","sources":["../../src/translate.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import { AfterViewInit, Directive, ElementRef, Input, OnDestroy } from '@angular/core';\nimport { TranslateService } from './translate.service';\nimport { Subject, Observable } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\n\n@Directive({\n  selector: '[translate]'\n})\nexport class TranslateDirective implements AfterViewInit, OnDestroy {\n\n  public keyPath: string;\n  public translateParams;\n  public translationLoaded$: Observable<boolean>;\n  private unsubscribe = new Subject<void>();\n\n  @Input('translate') set params(params) {\n    if (!this.translateService.isEquivalent(this.translateParams, params)) {\n      this.translateParams = params;\n      if (this.translateParams) {\n        this.runOneCheck(this.keyPath, this.translateParams);\n      }\n    }\n  };\n\n  constructor(public element: ElementRef,\n              public translateService: TranslateService) {\n    this.translationLoaded$ = this.translateService.translationsLoaded\n      .pipe(takeUntil(this.unsubscribe));\n  }\n\n  ngAfterViewInit() {\n    this.keyPath = this.element.nativeElement.textContent ? this.element.nativeElement.textContent.trim() : '';\n    this.element.nativeElement.textContent = '';\n    this.registerKeyChecker(this.keyPath);\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  private registerKeyChecker(keyPath) {\n    this.translationLoaded$\n      .subscribe(isLoaded => this.doCheck(isLoaded, keyPath, this.translateParams));\n  }\n\n  private runOneCheck(keyPath, params) {\n    if (keyPath) {\n      this.translationLoaded$\n        .pipe(take(1))\n        .subscribe(isLoaded => this.doCheck(isLoaded, keyPath, params));\n    }\n  }\n\n  private doCheck(isLoaded, keyPath, params) {\n    if (isLoaded) {\n      const readValue = keyPath !== '' ? this.translateService.read(keyPath, params) : '';\n      this.element.nativeElement.textContent = readValue === keyPath ? '' : readValue;\n    }\n  }\n\n}\n"]}