{"version":3,"file":"angular-intl.js","sources":["../package/src/types/config.token.ts","../package/src/loader.service.ts","../package/src/types/constants.enum.ts","../package/src/translate.service.ts","../package/src/translate.directive.ts","../package/src/translate.pipe.ts","../package/src/translate.module.ts","../package/src/mocks/loader.service.mock.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { TranslateConfiguration } from './translate-configuration.interface';\n\nexport const CONFIG = new InjectionToken<TranslateConfiguration>('config');\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { CONFIG } from './types/config.token';\nimport { TranslateConfiguration } from './types/translate-configuration.interface';\n\n@Injectable()\nexport class LoaderService {\n\n  public path = '/assets/languages/';\n  public extension = '.json';\n\n  constructor(public http: HttpClient,\n              @Inject(CONFIG) public config: TranslateConfiguration) {\n    this.path = config.path ? config.path : this.path;\n  }\n\n  public getFile(fileName: string): Observable<Object> {\n    return this.http.get(this.path + fileName + this.extension)\n  }\n\n}\n","export enum CONSTANTS {\n  EXIT = 'EXIT'\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject, Subject, of as observableOf, from as observableFrom, combineLatest } from 'rxjs';\nimport { filter, switchMap, switchMapTo, take } from 'rxjs/operators';\n\nimport { LoaderService } from './loader.service';\nimport { CONFIG } from './types/config.token';\nimport { TranslateConfiguration } from './types/translate-configuration.interface';\nimport { TranslationResult } from './types/translation-result.type';\nimport { CONSTANTS } from './types/constants.enum';\n\n@Injectable()\nexport class TranslateService {\n\n  public defaultKey;\n  public defaultPrefix;\n  public overrideKey;\n  public translations = {};\n\n  public loaderService: LoaderService;\n  public translationsLoaded = new BehaviorSubject<boolean>(false);\n\n  private matcher = key => new RegExp('{{\\\\s?[\\\\b' + key + '\\\\b]*\\\\s?}}', 'gm');\n\n  constructor(public http: HttpClient,\n              @Inject(CONFIG) public config: TranslateConfiguration) {\n    this.loaderService = new LoaderService(http, config);\n  }\n\n  public getBrowserLanguage() {\n    let browserLanguage = window.navigator.languages\n      ? window.navigator.languages[0]\n      : window.navigator.language;\n    if (browserLanguage.indexOf('-') !== -1) {\n      browserLanguage = browserLanguage.split('-')[0];\n    }\n    if (browserLanguage.indexOf('_') !== -1) {\n      browserLanguage = browserLanguage.split('_')[0];\n    }\n    return browserLanguage;\n  }\n\n  public setDefault(fileName: string) {\n    this.defaultKey = fileName;\n    this.defaultPrefix = fileName.split('-')[0];\n    if (this.translations[this.defaultKey]) {\n      this.translationsLoaded.next(true);\n    } else {\n      this.translationsLoaded.next(false);\n      this.loaderService.getFile(fileName)\n        .subscribe(translations => {\n          this.translations[this.defaultKey] = translations;\n          this.translationsLoaded.next(true);\n        });\n    }\n  }\n\n  public setOverride(fileName: string) {\n    this.overrideKey = fileName;\n    if (this.translations[this.overrideKey]) {\n      this.translationsLoaded.next(true);\n    } else {\n      this.loaderService.getFile(fileName)\n        .subscribe(translations => {\n          this.translations[this.overrideKey] = translations;\n          this.translationsLoaded.next(true);\n        });\n    }\n  }\n\n  public get(keyPaths: string | Array<string>): Observable<TranslationResult> {\n    return this.translationsLoaded.pipe(\n      filter(Boolean),\n      switchMapTo(keyPaths instanceof Array\n        ? this.getAll(keyPaths)\n        : this.getOne(keyPaths))\n    );\n  }\n\n  public getByFileName(keyPaths: string | Array<string>, fileName: string): Observable<TranslationResult> {\n    const translationLoaded = new Subject<string>();\n    const defaultFileName = `${this.defaultPrefix}-${fileName.split('-')[1]}`;\n    this.loaderService.getFile(fileName).pipe(\n        file => combineLatest(file, this.loaderService.getFile(defaultFileName)),\n        filter(([file, defaultFile]) => [file, defaultFile].indexOf(undefined) === -1),\n        take(1)\n      ).subscribe(([translations, defaultTranslations]) => {\n          this.translations[fileName] = translations;\n          this.translations[defaultFileName] = defaultTranslations;\n          translationLoaded.next(fileName);\n        }, () => {\n          this.loaderService.getFile(defaultFileName)\n            .pipe(take(1))\n            .subscribe(translations => {\n              this.translations[defaultFileName] = translations;\n              translationLoaded.next(defaultFileName);\n            });\n        }\n      );\n    return translationLoaded.pipe(\n      switchMap(overrideFileName => keyPaths instanceof Array\n        ? this.getAll(keyPaths, overrideFileName, defaultFileName)\n        : this.getOne(keyPaths, overrideFileName, defaultFileName)\n      ));\n  }\n\n  private getOne(keyPath: string, fileName = this.overrideKey, defaultKey = this.defaultKey): Observable<TranslationResult> {\n    return observableFrom([this.read(keyPath, {}, fileName, defaultKey)])\n  }\n\n  private getAll(keyPaths: Array<string>, fileName = this.overrideKey, defaultKey = this.defaultKey): Observable<TranslationResult> {\n    return observableOf(keyPaths.reduce(\n      (acc, keyPath) => ({ ...acc, [keyPath]: this.read(keyPath, {}, fileName, defaultKey) }), {}\n    ));\n  }\n\n  public read(keyPath: string, params = {}, overrideKey = this.overrideKey, defaultKey = this.defaultKey): string {\n    let value: string = CONSTANTS.EXIT;\n    const path = keyPath.split('.');\n    if (this.translations[overrideKey]) {\n      value = this.readValue(path, this.translations[overrideKey]);\n      if (value === CONSTANTS.EXIT) {\n        value = this.readValue(path, this.translations[defaultKey]);\n      }\n    } else if (this.translations[defaultKey]) {\n      value = this.readValue(path, this.translations[defaultKey]);\n    }\n    if (Boolean(params) && params !== {}) {\n      value = Object.keys(params)\n        .reduce((final, key) => final.replace(this.matcher(key), params[key]), value);\n    }\n    if (value === CONSTANTS.EXIT) {\n      console.warn('Unknown Key: ', keyPath);\n      return keyPath;\n    }\n    return value;\n  }\n\n  // this is a tailored 'reduce' method that breaks if a value is not found\n  private readValue(path: Array<any>, translation: any): string | CONSTANTS.EXIT {\n    const length = path.length;\n    for (let i = 0; i < length; i++) {\n      translation = translation && translation[path[i]] ? translation[path[i]] : CONSTANTS.EXIT;\n      if (translation === CONSTANTS.EXIT) {\n        break;\n      }\n    }\n    return translation;\n  }\n\n  public isEquivalent(a, b) {\n    if (!Boolean(a) || !Boolean(b)) {\n      return false;\n    }\n    const aProps = Object.getOwnPropertyNames(a);\n    const bProps = Object.getOwnPropertyNames(b);\n    if (aProps.length !== bProps.length) {\n      return false;\n    }\n    for (let i = 0; i < aProps.length; i++) {\n      const propName = aProps[i];\n      if (a[propName] !== b[propName]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n}\n","import { AfterViewInit, Directive, ElementRef, Input, OnDestroy } from '@angular/core';\nimport { TranslateService } from './translate.service';\nimport { Subject, Observable } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\n\n@Directive({\n  selector: '[translate]'\n})\nexport class TranslateDirective implements AfterViewInit, OnDestroy {\n\n  public keyPath: string;\n  public translateParams;\n  public translationLoaded$: Observable<boolean>;\n  private unsubscribe = new Subject<void>();\n\n  @Input('translate') set params(params) {\n    if (!this.translateService.isEquivalent(this.translateParams, params)) {\n      this.translateParams = params;\n      if (this.translateParams) {\n        this.runOneCheck(this.keyPath, this.translateParams);\n      }\n    }\n  };\n\n  constructor(public element: ElementRef,\n              public translateService: TranslateService) {\n    this.translationLoaded$ = this.translateService.translationsLoaded\n      .pipe(takeUntil(this.unsubscribe));\n  }\n\n  ngAfterViewInit() {\n    this.keyPath = this.element.nativeElement.textContent ? this.element.nativeElement.textContent.trim() : '';\n    this.element.nativeElement.textContent = '';\n    this.registerKeyChecker(this.keyPath);\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  private registerKeyChecker(keyPath) {\n    this.translationLoaded$\n      .subscribe(isLoaded => this.doCheck(isLoaded, keyPath, this.translateParams));\n  }\n\n  private runOneCheck(keyPath, params) {\n    if (keyPath) {\n      this.translationLoaded$\n        .pipe(take(1))\n        .subscribe(isLoaded => this.doCheck(isLoaded, keyPath, params));\n    }\n  }\n\n  private doCheck(isLoaded, keyPath, params) {\n    if (isLoaded) {\n      const readValue = keyPath !== '' ? this.translateService.read(keyPath, params) : '';\n      this.element.nativeElement.textContent = readValue === keyPath ? '' : readValue;\n    }\n  }\n\n}\n","import { OnDestroy, Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from './translate.service';\nimport { Subject, Observable } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\n@Pipe({\n  name: 'translate',\n  pure: false\n})\nexport class TranslatePipe implements PipeTransform, OnDestroy {\n\n  public translation: string = '';\n  public translationLoaded$: Observable<boolean>;\n  private unsubscribe = new Subject<void>();\n\n  constructor(private translateService: TranslateService) {\n    this.translationLoaded$ = translateService.translationsLoaded.pipe(\n      filter(Boolean),\n      takeUntil(this.unsubscribe)\n    );\n  }\n\n  transform(val, args): string {\n    this.translationLoaded$.subscribe(() => {\n      const readValue = val ? this.translateService.read(val, args) : '';\n      this.translation = readValue === val ? this.translation : readValue;\n    });\n    return this.translation;\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { TranslateDirective } from './translate.directive';\nimport { TranslatePipe } from './translate.pipe';\nimport { TranslateService } from './translate.service';\nimport { LoaderService } from './loader.service';\n\nimport { CONFIG } from './types/config.token';\n\n@NgModule({\n  imports: [HttpClientModule],\n  declarations: [\n    TranslateDirective,\n    TranslatePipe\n  ],\n  exports: [\n    TranslateDirective,\n    TranslatePipe\n  ]\n})\nexport class TranslateModule {\n  static forRoot(config = {}): ModuleWithProviders {\n    return {\n      ngModule: TranslateModule,\n      providers: [\n        TranslateService,\n        LoaderService,\n        { provide: CONFIG, useValue: config }\n      ]\n    };\n  };\n  static forChild(): ModuleWithProviders {\n    return {\n      ngModule: TranslateModule\n    }\n  };\n}\n\n\n","import { of as observableOf } from 'rxjs';\nimport { LoaderService } from '../loader.service';\n\nexport const translations = {\n  'default-en': {\n    'BODY': {\n      'KNOWN_KEY': 'Known key example'\n    }\n  }\n};\n\nexport const LoaderServiceMock: LoaderService = {\n  path: '/assets/language',\n  extension: '.json',\n  http: null,\n  config: null,\n  getFile: (key) => observableOf(translations[key])\n};\n"],"names":["observableFrom","observableOf"],"mappings":"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"}