{"version":3,"file":"translate.service.js","sourceRoot":"","sources":["../package/src/translate.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject, Subject, of as observableOf, from as observableFrom, combineLatest } from 'rxjs';\nimport { filter, switchMap, switchMapTo, take } from 'rxjs/operators';\n\nimport { LoaderService } from './loader.service';\nimport { CONFIG } from './types/config.token';\nimport { TranslateConfiguration } from './types/translate-configuration.interface';\nimport { TranslationResult } from './types/translation-result.type';\nimport { CONSTANTS } from './types/constants.enum';\n\n@Injectable()\nexport class TranslateService {\n\n  public defaultKey;\n  public defaultPrefix;\n  public overrideKey;\n  public translations = {};\n\n  public loaderService: LoaderService;\n  public translationsLoaded = new BehaviorSubject<boolean>(false);\n\n  private matcher = key => new RegExp('{{\\\\s?[\\\\b' + key + '\\\\b]*\\\\s?}}', 'gm');\n\n  constructor(public http: HttpClient,\n              @Inject(CONFIG) public config: TranslateConfiguration) {\n    this.loaderService = new LoaderService(http, config);\n  }\n\n  public getBrowserLanguage() {\n    let browserLanguage = window.navigator.languages\n      ? window.navigator.languages[0]\n      : window.navigator.language;\n    if (browserLanguage.indexOf('-') !== -1) {\n      browserLanguage = browserLanguage.split('-')[0];\n    }\n    if (browserLanguage.indexOf('_') !== -1) {\n      browserLanguage = browserLanguage.split('_')[0];\n    }\n    return browserLanguage;\n  }\n\n  public setDefault(fileName: string) {\n    this.defaultKey = fileName;\n    this.defaultPrefix = fileName.split('-')[0];\n    if (this.translations[this.defaultKey]) {\n      this.translationsLoaded.next(true);\n    } else {\n      this.translationsLoaded.next(false);\n      this.loaderService.getFile(fileName)\n        .subscribe(translations => {\n          this.translations[this.defaultKey] = translations;\n          this.translationsLoaded.next(true);\n        });\n    }\n  }\n\n  public setOverride(fileName: string) {\n    this.overrideKey = fileName;\n    if (this.translations[this.overrideKey]) {\n      this.translationsLoaded.next(true);\n    } else {\n      this.loaderService.getFile(fileName)\n        .subscribe(translations => {\n          this.translations[this.overrideKey] = translations;\n          this.translationsLoaded.next(true);\n        });\n    }\n  }\n\n  public get(keyPaths: string | Array<string>): Observable<TranslationResult> {\n    return this.translationsLoaded.pipe(\n      filter(Boolean),\n      switchMapTo(keyPaths instanceof Array\n        ? this.getAll(keyPaths)\n        : this.getOne(keyPaths))\n    );\n  }\n\n  public getByFileName(keyPaths: string | Array<string>, fileName: string): Observable<TranslationResult> {\n    const translationLoaded = new Subject<string>();\n    const defaultFileName = `${this.defaultPrefix}-${fileName.split('-')[1]}`;\n    this.loaderService.getFile(fileName).pipe(\n        file => combineLatest(file, this.loaderService.getFile(defaultFileName)),\n        filter(([file, defaultFile]) => [file, defaultFile].indexOf(undefined) === -1),\n        take(1)\n      ).subscribe(([translations, defaultTranslations]) => {\n          this.translations[fileName] = translations;\n          this.translations[defaultFileName] = defaultTranslations;\n          translationLoaded.next(fileName);\n        }, () => {\n          this.loaderService.getFile(defaultFileName)\n            .pipe(take(1))\n            .subscribe(translations => {\n              this.translations[defaultFileName] = translations;\n              translationLoaded.next(defaultFileName);\n            });\n        }\n      );\n    return translationLoaded.pipe(\n      switchMap(overrideFileName => keyPaths instanceof Array\n        ? this.getAll(keyPaths, overrideFileName, defaultFileName)\n        : this.getOne(keyPaths, overrideFileName, defaultFileName)\n      ));\n  }\n\n  private getOne(keyPath: string, fileName = this.overrideKey, defaultKey = this.defaultKey): Observable<TranslationResult> {\n    return observableFrom([this.read(keyPath, {}, fileName, defaultKey)])\n  }\n\n  private getAll(keyPaths: Array<string>, fileName = this.overrideKey, defaultKey = this.defaultKey): Observable<TranslationResult> {\n    return observableOf(keyPaths.reduce(\n      (acc, keyPath) => ({ ...acc, [keyPath]: this.read(keyPath, {}, fileName, defaultKey) }), {}\n    ));\n  }\n\n  public read(keyPath: string, params = {}, overrideKey = this.overrideKey, defaultKey = this.defaultKey): string {\n    let value: string = CONSTANTS.EXIT;\n    const path = keyPath.split('.');\n    if (this.translations[overrideKey]) {\n      value = this.readValue(path, this.translations[overrideKey]);\n      if (value === CONSTANTS.EXIT) {\n        value = this.readValue(path, this.translations[defaultKey]);\n      }\n    } else if (this.translations[defaultKey]) {\n      value = this.readValue(path, this.translations[defaultKey]);\n    }\n    if (Boolean(params) && params !== {}) {\n      value = Object.keys(params)\n        .reduce((final, key) => final.replace(this.matcher(key), params[key]), value);\n    }\n    if (value === CONSTANTS.EXIT) {\n      console.warn('Unknown Key: ', keyPath);\n      return keyPath;\n    }\n    return value;\n  }\n\n  // this is a tailored 'reduce' method that breaks if a value is not found\n  private readValue(path: Array<any>, translation: any): string | CONSTANTS.EXIT {\n    const length = path.length;\n    for (let i = 0; i < length; i++) {\n      translation = translation && translation[path[i]] ? translation[path[i]] : CONSTANTS.EXIT;\n      if (translation === CONSTANTS.EXIT) {\n        break;\n      }\n    }\n    return translation;\n  }\n\n  public isEquivalent(a, b) {\n    if (!Boolean(a) || !Boolean(b)) {\n      return false;\n    }\n    const aProps = Object.getOwnPropertyNames(a);\n    const bProps = Object.getOwnPropertyNames(b);\n    if (aProps.length !== bProps.length) {\n      return false;\n    }\n    for (let i = 0; i < aProps.length; i++) {\n      const propName = aProps[i];\n      if (a[propName] !== b[propName]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n}\n"]}