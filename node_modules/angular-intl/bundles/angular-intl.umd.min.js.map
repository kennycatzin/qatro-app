{"version":3,"sources":["angular-intl.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","angularIntl","core","common","http","rxjs","operators","this","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","CONFIG","InjectionToken","LoaderService","http$$1","config","path","extension","getFile","fileName","get","decorators","type","Injectable","ctorParameters","HttpClient","undefined","Inject","args","CONSTANTS","TranslateService","translations","translationsLoaded","BehaviorSubject","matcher","key","RegExp","loaderService","getBrowserLanguage","browserLanguage","window","navigator","languages","language","indexOf","split","setDefault","_this","defaultKey","defaultPrefix","next","subscribe","setOverride","overrideKey","keyPaths","pipe","filter","Boolean","switchMapTo","Array","getAll","getOne","getByFileName","translationLoaded","Subject","defaultFileName","file","combineLatest","_a","take","defaultTranslations","switchMap","overrideFileName","keyPath","from","read","of","reduce","acc","params","value","readValue","keys","final","replace","console","warn","translation","isEquivalent","a","b","aProps","getOwnPropertyNames","bProps","propName","TranslateDirective","element","translateService","unsubscribe","translationLoaded$","takeUntil","defineProperty","set","translateParams","runOneCheck","enumerable","configurable","ngAfterViewInit","nativeElement","textContent","trim","registerKeyChecker","ngOnDestroy","complete","isLoaded","doCheck","Directive","selector","ElementRef","propDecorators","Input","TranslatePipe","transform","val","Pipe","name","pure","TranslateModule","forRoot","ngModule","providers","provide","useValue","forChild","NgModule","imports","HttpClientModule","declarations","default-en","BODY","KNOWN_KEY","LoaderServiceMock","Éµa"],"mappings":"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","file":"angular-intl.umd.min.js.map","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common/http'), require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('angular-intl', ['exports', '@angular/core', '@angular/common/http', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.angularIntl = {}),global.ng.core,global.ng.common.http,global.rxjs,global.rxjs.operators));\n}(this, (function (exports,core,http,rxjs,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes} checked by tsc\n     */\n    var /** @type {?} */ CONFIG = new core.InjectionToken('config');\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes} checked by tsc\n     */\n    var LoaderService = /** @class */ (function () {\n        function LoaderService(http$$1, config) {\n            this.http = http$$1;\n            this.config = config;\n            this.path = '/assets/languages/';\n            this.extension = '.json';\n            this.path = config.path ? config.path : this.path;\n        }\n        /**\n         * @param {?} fileName\n         * @return {?}\n         */\n        LoaderService.prototype.getFile = /**\n         * @param {?} fileName\n         * @return {?}\n         */\n        function (fileName) {\n            return this.http.get(this.path + fileName + this.extension);\n        };\n        LoaderService.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        LoaderService.ctorParameters = function () { return [\n            { type: http.HttpClient, },\n            { type: undefined, decorators: [{ type: core.Inject, args: [CONFIG,] },] },\n        ]; };\n        return LoaderService;\n    }());\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes} checked by tsc\n     */\n    /** @enum {string} */\n    var CONSTANTS = {\n        EXIT: 'EXIT',\n    };\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes} checked by tsc\n     */\n    var TranslateService = /** @class */ (function () {\n        function TranslateService(http$$1, config) {\n            this.http = http$$1;\n            this.config = config;\n            this.translations = {};\n            this.translationsLoaded = new rxjs.BehaviorSubject(false);\n            this.matcher = function (key) { return new RegExp('{{\\\\s?[\\\\b' + key + '\\\\b]*\\\\s?}}', 'gm'); };\n            this.loaderService = new LoaderService(http$$1, config);\n        }\n        /**\n         * @return {?}\n         */\n        TranslateService.prototype.getBrowserLanguage = /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ browserLanguage = window.navigator.languages\n                ? window.navigator.languages[0]\n                : window.navigator.language;\n            if (browserLanguage.indexOf('-') !== -1) {\n                browserLanguage = browserLanguage.split('-')[0];\n            }\n            if (browserLanguage.indexOf('_') !== -1) {\n                browserLanguage = browserLanguage.split('_')[0];\n            }\n            return browserLanguage;\n        };\n        /**\n         * @param {?} fileName\n         * @return {?}\n         */\n        TranslateService.prototype.setDefault = /**\n         * @param {?} fileName\n         * @return {?}\n         */\n        function (fileName) {\n            var _this = this;\n            this.defaultKey = fileName;\n            this.defaultPrefix = fileName.split('-')[0];\n            if (this.translations[this.defaultKey]) {\n                this.translationsLoaded.next(true);\n            }\n            else {\n                this.translationsLoaded.next(false);\n                this.loaderService.getFile(fileName)\n                    .subscribe(function (translations) {\n                    _this.translations[_this.defaultKey] = translations;\n                    _this.translationsLoaded.next(true);\n                });\n            }\n        };\n        /**\n         * @param {?} fileName\n         * @return {?}\n         */\n        TranslateService.prototype.setOverride = /**\n         * @param {?} fileName\n         * @return {?}\n         */\n        function (fileName) {\n            var _this = this;\n            this.overrideKey = fileName;\n            if (this.translations[this.overrideKey]) {\n                this.translationsLoaded.next(true);\n            }\n            else {\n                this.loaderService.getFile(fileName)\n                    .subscribe(function (translations) {\n                    _this.translations[_this.overrideKey] = translations;\n                    _this.translationsLoaded.next(true);\n                });\n            }\n        };\n        /**\n         * @param {?} keyPaths\n         * @return {?}\n         */\n        TranslateService.prototype.get = /**\n         * @param {?} keyPaths\n         * @return {?}\n         */\n        function (keyPaths) {\n            return this.translationsLoaded.pipe(operators.filter(Boolean), operators.switchMapTo(keyPaths instanceof Array\n                ? this.getAll(keyPaths)\n                : this.getOne(keyPaths)));\n        };\n        /**\n         * @param {?} keyPaths\n         * @param {?} fileName\n         * @return {?}\n         */\n        TranslateService.prototype.getByFileName = /**\n         * @param {?} keyPaths\n         * @param {?} fileName\n         * @return {?}\n         */\n        function (keyPaths, fileName) {\n            var _this = this;\n            var /** @type {?} */ translationLoaded = new rxjs.Subject();\n            var /** @type {?} */ defaultFileName = this.defaultPrefix + \"-\" + fileName.split('-')[1];\n            this.loaderService.getFile(fileName).pipe(function (file) { return rxjs.combineLatest(file, _this.loaderService.getFile(defaultFileName)); }, operators.filter(function (_a) {\n                var file = _a[0], defaultFile = _a[1];\n                return [file, defaultFile].indexOf(undefined) === -1;\n            }), operators.take(1)).subscribe(function (_a) {\n                var translations = _a[0], defaultTranslations = _a[1];\n                _this.translations[fileName] = translations;\n                _this.translations[defaultFileName] = defaultTranslations;\n                translationLoaded.next(fileName);\n            }, function () {\n                _this.loaderService.getFile(defaultFileName)\n                    .pipe(operators.take(1))\n                    .subscribe(function (translations) {\n                    _this.translations[defaultFileName] = translations;\n                    translationLoaded.next(defaultFileName);\n                });\n            });\n            return translationLoaded.pipe(operators.switchMap(function (overrideFileName) {\n                return keyPaths instanceof Array\n                    ? _this.getAll(keyPaths, overrideFileName, defaultFileName)\n                    : _this.getOne(keyPaths, overrideFileName, defaultFileName);\n            }));\n        };\n        /**\n         * @param {?} keyPath\n         * @param {?=} fileName\n         * @param {?=} defaultKey\n         * @return {?}\n         */\n        TranslateService.prototype.getOne = /**\n         * @param {?} keyPath\n         * @param {?=} fileName\n         * @param {?=} defaultKey\n         * @return {?}\n         */\n        function (keyPath, fileName, defaultKey) {\n            if (fileName === void 0) { fileName = this.overrideKey; }\n            if (defaultKey === void 0) { defaultKey = this.defaultKey; }\n            return rxjs.from([this.read(keyPath, {}, fileName, defaultKey)]);\n        };\n        /**\n         * @param {?} keyPaths\n         * @param {?=} fileName\n         * @param {?=} defaultKey\n         * @return {?}\n         */\n        TranslateService.prototype.getAll = /**\n         * @param {?} keyPaths\n         * @param {?=} fileName\n         * @param {?=} defaultKey\n         * @return {?}\n         */\n        function (keyPaths, fileName, defaultKey) {\n            var _this = this;\n            if (fileName === void 0) { fileName = this.overrideKey; }\n            if (defaultKey === void 0) { defaultKey = this.defaultKey; }\n            return rxjs.of(keyPaths.reduce(function (acc, keyPath) {\n                return (__assign({}, acc, (_a = {}, _a[keyPath] = _this.read(keyPath, {}, fileName, defaultKey), _a)));\n                var _a;\n            }, {}));\n        };\n        /**\n         * @param {?} keyPath\n         * @param {?=} params\n         * @param {?=} overrideKey\n         * @param {?=} defaultKey\n         * @return {?}\n         */\n        TranslateService.prototype.read = /**\n         * @param {?} keyPath\n         * @param {?=} params\n         * @param {?=} overrideKey\n         * @param {?=} defaultKey\n         * @return {?}\n         */\n        function (keyPath, params, overrideKey, defaultKey) {\n            var _this = this;\n            if (params === void 0) { params = {}; }\n            if (overrideKey === void 0) { overrideKey = this.overrideKey; }\n            if (defaultKey === void 0) { defaultKey = this.defaultKey; }\n            var /** @type {?} */ value = CONSTANTS.EXIT;\n            var /** @type {?} */ path = keyPath.split('.');\n            if (this.translations[overrideKey]) {\n                value = this.readValue(path, this.translations[overrideKey]);\n                if (value === CONSTANTS.EXIT) {\n                    value = this.readValue(path, this.translations[defaultKey]);\n                }\n            }\n            else if (this.translations[defaultKey]) {\n                value = this.readValue(path, this.translations[defaultKey]);\n            }\n            if (Boolean(params) && params !== {}) {\n                value = Object.keys(params)\n                    .reduce(function (final, key) { return final.replace(_this.matcher(key), params[key]); }, value);\n            }\n            if (value === CONSTANTS.EXIT) {\n                console.warn('Unknown Key: ', keyPath);\n                return keyPath;\n            }\n            return value;\n        };\n        /**\n         * @param {?} path\n         * @param {?} translation\n         * @return {?}\n         */\n        TranslateService.prototype.readValue = /**\n         * @param {?} path\n         * @param {?} translation\n         * @return {?}\n         */\n        function (path, translation) {\n            var /** @type {?} */ length = path.length;\n            for (var /** @type {?} */ i = 0; i < length; i++) {\n                translation = translation && translation[path[i]] ? translation[path[i]] : CONSTANTS.EXIT;\n                if (translation === CONSTANTS.EXIT) {\n                    break;\n                }\n            }\n            return translation;\n        };\n        /**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        TranslateService.prototype.isEquivalent = /**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        function (a, b) {\n            if (!Boolean(a) || !Boolean(b)) {\n                return false;\n            }\n            var /** @type {?} */ aProps = Object.getOwnPropertyNames(a);\n            var /** @type {?} */ bProps = Object.getOwnPropertyNames(b);\n            if (aProps.length !== bProps.length) {\n                return false;\n            }\n            for (var /** @type {?} */ i = 0; i < aProps.length; i++) {\n                var /** @type {?} */ propName = aProps[i];\n                if (a[propName] !== b[propName]) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        TranslateService.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        TranslateService.ctorParameters = function () { return [\n            { type: http.HttpClient, },\n            { type: undefined, decorators: [{ type: core.Inject, args: [CONFIG,] },] },\n        ]; };\n        return TranslateService;\n    }());\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes} checked by tsc\n     */\n    var TranslateDirective = /** @class */ (function () {\n        function TranslateDirective(element, translateService) {\n            this.element = element;\n            this.translateService = translateService;\n            this.unsubscribe = new rxjs.Subject();\n            this.translationLoaded$ = this.translateService.translationsLoaded\n                .pipe(operators.takeUntil(this.unsubscribe));\n        }\n        Object.defineProperty(TranslateDirective.prototype, \"params\", {\n            set: /**\n             * @param {?} params\n             * @return {?}\n             */\n            function (params) {\n                if (!this.translateService.isEquivalent(this.translateParams, params)) {\n                    this.translateParams = params;\n                    if (this.translateParams) {\n                        this.runOneCheck(this.keyPath, this.translateParams);\n                    }\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        TranslateDirective.prototype.ngAfterViewInit = /**\n         * @return {?}\n         */\n        function () {\n            this.keyPath = this.element.nativeElement.textContent ? this.element.nativeElement.textContent.trim() : '';\n            this.element.nativeElement.textContent = '';\n            this.registerKeyChecker(this.keyPath);\n        };\n        /**\n         * @return {?}\n         */\n        TranslateDirective.prototype.ngOnDestroy = /**\n         * @return {?}\n         */\n        function () {\n            this.unsubscribe.next();\n            this.unsubscribe.complete();\n        };\n        /**\n         * @param {?} keyPath\n         * @return {?}\n         */\n        TranslateDirective.prototype.registerKeyChecker = /**\n         * @param {?} keyPath\n         * @return {?}\n         */\n        function (keyPath) {\n            var _this = this;\n            this.translationLoaded$\n                .subscribe(function (isLoaded) { return _this.doCheck(isLoaded, keyPath, _this.translateParams); });\n        };\n        /**\n         * @param {?} keyPath\n         * @param {?} params\n         * @return {?}\n         */\n        TranslateDirective.prototype.runOneCheck = /**\n         * @param {?} keyPath\n         * @param {?} params\n         * @return {?}\n         */\n        function (keyPath, params) {\n            var _this = this;\n            if (keyPath) {\n                this.translationLoaded$\n                    .pipe(operators.take(1))\n                    .subscribe(function (isLoaded) { return _this.doCheck(isLoaded, keyPath, params); });\n            }\n        };\n        /**\n         * @param {?} isLoaded\n         * @param {?} keyPath\n         * @param {?} params\n         * @return {?}\n         */\n        TranslateDirective.prototype.doCheck = /**\n         * @param {?} isLoaded\n         * @param {?} keyPath\n         * @param {?} params\n         * @return {?}\n         */\n        function (isLoaded, keyPath, params) {\n            if (isLoaded) {\n                var /** @type {?} */ readValue = keyPath !== '' ? this.translateService.read(keyPath, params) : '';\n                this.element.nativeElement.textContent = readValue === keyPath ? '' : readValue;\n            }\n        };\n        TranslateDirective.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[translate]'\n                    },] }\n        ];\n        /** @nocollapse */\n        TranslateDirective.ctorParameters = function () { return [\n            { type: core.ElementRef, },\n            { type: TranslateService, },\n        ]; };\n        TranslateDirective.propDecorators = {\n            \"params\": [{ type: core.Input, args: ['translate',] },],\n        };\n        return TranslateDirective;\n    }());\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes} checked by tsc\n     */\n    var TranslatePipe = /** @class */ (function () {\n        function TranslatePipe(translateService) {\n            this.translateService = translateService;\n            this.translation = '';\n            this.unsubscribe = new rxjs.Subject();\n            this.translationLoaded$ = translateService.translationsLoaded.pipe(operators.filter(Boolean), operators.takeUntil(this.unsubscribe));\n        }\n        /**\n         * @param {?} val\n         * @param {?} args\n         * @return {?}\n         */\n        TranslatePipe.prototype.transform = /**\n         * @param {?} val\n         * @param {?} args\n         * @return {?}\n         */\n        function (val, args) {\n            var _this = this;\n            this.translationLoaded$.subscribe(function () {\n                var /** @type {?} */ readValue = val ? _this.translateService.read(val, args) : '';\n                _this.translation = readValue === val ? _this.translation : readValue;\n            });\n            return this.translation;\n        };\n        /**\n         * @return {?}\n         */\n        TranslatePipe.prototype.ngOnDestroy = /**\n         * @return {?}\n         */\n        function () {\n            this.unsubscribe.next();\n            this.unsubscribe.complete();\n        };\n        TranslatePipe.decorators = [\n            { type: core.Pipe, args: [{\n                        name: 'translate',\n                        pure: false\n                    },] }\n        ];\n        /** @nocollapse */\n        TranslatePipe.ctorParameters = function () { return [\n            { type: TranslateService, },\n        ]; };\n        return TranslatePipe;\n    }());\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes} checked by tsc\n     */\n    var TranslateModule = /** @class */ (function () {\n        function TranslateModule() {\n        }\n        /**\n         * @param {?=} config\n         * @return {?}\n         */\n        TranslateModule.forRoot = /**\n         * @param {?=} config\n         * @return {?}\n         */\n        function (config) {\n            if (config === void 0) { config = {}; }\n            return {\n                ngModule: TranslateModule,\n                providers: [\n                    TranslateService,\n                    LoaderService,\n                    { provide: CONFIG, useValue: config }\n                ]\n            };\n        };\n        /**\n         * @return {?}\n         */\n        TranslateModule.forChild = /**\n         * @return {?}\n         */\n        function () {\n            return {\n                ngModule: TranslateModule\n            };\n        };\n        TranslateModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [http.HttpClientModule],\n                        declarations: [\n                            TranslateDirective,\n                            TranslatePipe\n                        ],\n                        exports: [\n                            TranslateDirective,\n                            TranslatePipe\n                        ]\n                    },] }\n        ];\n        return TranslateModule;\n    }());\n\n    /**\n     * @fileoverview added by tsickle\n     * @suppress {checkTypes} checked by tsc\n     */\n    var /** @type {?} */ translations = {\n        'default-en': {\n            'BODY': {\n                'KNOWN_KEY': 'Known key example'\n            }\n        }\n    };\n    var /** @type {?} */ LoaderServiceMock = {\n        path: '/assets/language',\n        extension: '.json',\n        http: null,\n        config: null,\n        getFile: function (key) { return rxjs.of(translations[key]); }\n    };\n\n    exports.TranslateModule = TranslateModule;\n    exports.TranslateService = TranslateService;\n    exports.TranslateDirective = TranslateDirective;\n    exports.TranslatePipe = TranslatePipe;\n    exports.LoaderService = LoaderService;\n    exports.LoaderServiceMock = LoaderServiceMock;\n    exports.Éµa = CONFIG;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=angular-intl.umd.js.map\n"]}