import { HttpClient } from '@angular/common/http';
import { Observable, BehaviorSubject } from 'rxjs';
import { LoaderService } from './loader.service';
import { TranslateConfiguration } from './types/translate-configuration.interface';
import { TranslationResult } from './types/translation-result.type';
export declare class TranslateService {
    http: HttpClient;
    config: TranslateConfiguration;
    defaultKey: any;
    defaultPrefix: any;
    overrideKey: any;
    translations: {};
    loaderService: LoaderService;
    translationsLoaded: BehaviorSubject<boolean>;
    private matcher;
    constructor(http: HttpClient, config: TranslateConfiguration);
    getBrowserLanguage(): string;
    setDefault(fileName: string): void;
    setOverride(fileName: string): void;
    get(keyPaths: string | Array<string>): Observable<TranslationResult>;
    getByFileName(keyPaths: string | Array<string>, fileName: string): Observable<TranslationResult>;
    private getOne(keyPath, fileName?, defaultKey?);
    private getAll(keyPaths, fileName?, defaultKey?);
    read(keyPath: string, params?: {}, overrideKey?: any, defaultKey?: any): string;
    private readValue(path, translation);
    isEquivalent(a: any, b: any): boolean;
}
